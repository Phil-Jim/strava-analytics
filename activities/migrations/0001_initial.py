# Generated by Django 5.2.6 on 2025-09-11 19:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strava_id', models.BigIntegerField(unique=True)),
                ('name', models.CharField(max_length=200)),
                ('activity_type', models.CharField(choices=[('Run', 'Run'), ('Ride', 'Ride'), ('Swim', 'Swim'), ('Walk', 'Walk'), ('Hike', 'Hike'), ('Workout', 'Workout'), ('Other', 'Other')], default='Other', max_length=50)),
                ('start_date', models.DateTimeField()),
                ('distance', models.FloatField(help_text='Distance in meters')),
                ('moving_time', models.IntegerField(help_text='Moving time in seconds')),
                ('elapsed_time', models.IntegerField(help_text='Total elapsed time in seconds')),
                ('average_speed', models.FloatField(blank=True, help_text='Average speed in m/s', null=True)),
                ('max_speed', models.FloatField(blank=True, help_text='Max speed in m/s', null=True)),
                ('total_elevation_gain', models.FloatField(blank=True, help_text='Elevation gain in meters', null=True)),
                ('average_heartrate', models.FloatField(blank=True, null=True)),
                ('max_heartrate', models.FloatField(blank=True, null=True)),
                ('average_watts', models.FloatField(blank=True, null=True)),
                ('max_watts', models.FloatField(blank=True, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('start_latitude', models.FloatField(blank=True, null=True)),
                ('start_longitude', models.FloatField(blank=True, null=True)),
                ('end_latitude', models.FloatField(blank=True, null=True)),
                ('end_longitude', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['start_date'], name='activities__start_d_3af82b_idx'), models.Index(fields=['activity_type'], name='activities__activit_8e7970_idx'), models.Index(fields=['strava_id'], name='activities__strava__f1f438_idx')],
            },
        ),
        migrations.CreateModel(
            name='ActivitySummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], max_length=10)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_activities', models.IntegerField(default=0)),
                ('run_count', models.IntegerField(default=0)),
                ('ride_count', models.IntegerField(default=0)),
                ('swim_count', models.IntegerField(default=0)),
                ('other_count', models.IntegerField(default=0)),
                ('total_distance', models.FloatField(default=0)),
                ('run_distance', models.FloatField(default=0)),
                ('ride_distance', models.FloatField(default=0)),
                ('swim_distance', models.FloatField(default=0)),
                ('total_moving_time', models.IntegerField(default=0)),
                ('total_elapsed_time', models.IntegerField(default=0)),
                ('total_elevation_gain', models.FloatField(default=0)),
                ('total_calories', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-period_start'],
                'unique_together': {('period_type', 'period_start', 'period_end')},
            },
        ),
    ]
